{
	"info": {
		"_postman_id": "b1629ac1-a699-47a0-9970-8c2295eb40c1",
		"name": "mod-gobi",
		"description": "Tests for mod-gobi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test Setup",
			"item": [
				{
					"name": "/authn/login (OKAPI)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd1890b6-57e9-4b7b-bb50-dc5bb7de6e94",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"let tenant = pm.environment.get(\"xokapitenant\");",
									"let token = postman.getResponseHeader(\"x-okapi-token\");",
									"pm.globals.set(\"xokapitoken\", token);",
									"",
									"let baseURI = pm.environment.get(\"protocol\") + \"://\" + pm.environment.get(\"url\")+ \":\" + pm.environment.get(\"okapiport\");",
									"let endpointBooks = baseURI + \"/instance-types?query=(name=Books)\";",
									"let endpointLocations = baseURI + \"/locations\";",
									"let endpointBook = baseURI + \"/material-types?query=(name=book)\";",
									"let endpointGroups = baseURI + \"/groups\";",
									"let endpointCanCirculate = baseURI + \"/loan-types?query=(name=can circulate)\";",
									"",
									"let testData = {",
									"    user: {",
									"    \tusername: \"rwegener\",",
									"    \tid: \"bde27422-efe1-4327-b5af-acbad05cd24f\",",
									"    \tpersonal: {",
									"    \t\tfirstName: \"Rudolph\",",
									"    \t\tlastName: \"Wegener\"",
									"    \t}",
									"    },",
									"\tcase1: {",
									"\t\tdescription: \"single holding, single item\",",
									"\t\tinstance: {",
									"\t\t\ttitle: \"The Man in the High Castle\",",
									"\t\t\tsource: \"Local\"",
									"\t\t},",
									"\t\tholdings: {",
									"\t\t\tA: {",
									"\t\t\t\tid: \"8163b604-2086-4922-bb2c-94b7779d6808\",",
									"\t\t\t\tcallNumber: \"DK4315.Z9 D44 2012\"",
									"\t\t\t}",
									"\t\t},",
									"\t\titems: {",
									"\t\t\tA1: {",
									"\t\t\t\t\"barcode\": \"978-7657572482\",",
									"\t\t\t\t\"status\": {",
									"\t\t\t\t\t\"name\": \"Available\"",
									"\t\t\t\t}",
									"\t\t\t}",
									"\t\t}",
									"\t},",
									"\tcase2: {",
									"\t\tdescription: \"multiple holdings, single item each\",",
									"\t\tinstance: {",
									"\t\t\ttitle: \"Highrise\",",
									"\t\t\tsource: \"Local\"",
									"\t\t},",
									"\t\tholdings: {",
									"\t\t\tA: {",
									"\t\t\t\tid: \"382c5793-672d-4371-a112-3f4a9213e61f\",",
									"\t\t\t\tcallNumber: \"JH8675.Z1 D12 2001\"",
									"\t\t\t},",
									"\t\t\tB: {",
									"\t\t\t\tid: \"787275e6-e6e7-43e6-8a2f-f4d291383bc6\",",
									"\t\t\t\tcallNumber: \"JH8675.Z2 D12 2001\"",
									"\t\t\t}",
									"\t\t},",
									"\t\titems: {",
									"\t\t\tA1: {",
									"\t\t\t\t\"barcode\": \"978-1237572482\",",
									"\t\t\t\t\"status\": {",
									"\t\t\t\t\t\"name\": \"Available\"",
									"\t\t\t\t}",
									"\t\t\t},",
									"\t\t\tB1: {",
									"\t\t\t\t\"barcode\": \"978-8736724821\",",
									"\t\t\t\t\"status\": {",
									"\t\t\t\t\t\"name\": \"Available\"",
									"\t\t\t\t}",
									"\t\t\t}\t\t\t",
									"\t\t},",
									"\t\tloans: {",
									"\t\t    A1: {",
									"                action: \"checkedout\",",
									"                status: {",
									"                    \"name\": \"Open\"",
									"                }",
									"\t\t    }",
									"\t\t}",
									"\t},",
									"\tcase3: {",
									"\t\tdescription: \"no holding, no item\",",
									"\t\tinstance: {",
									"\t\t\ttitle: \"The Forever War\",",
									"\t\t\tsource: \"Local\"",
									"    \t},",
									"\t\tholdings: {},",
									"\t\titems: {}",
									"\t},",
									"\tcase4: {",
									"\t\tdescription: \"single holding, multiple items\",",
									"\t\tinstance: {",
									"\t\t\ttitle: \"Breakfast of Champions\",",
									"\t\t\tsource: \"Local\"",
									"\t\t},",
									"\t\tholdings: {",
									"\t\t\tA: {",
									"\t\t\t\tid: \"f51869d4-b0d8-414c-a7ee-ee0dc30759fa\",",
									"\t\t\t\tcallNumber: \"UP5432.Z5 F11 1984\"",
									"\t\t\t}",
									"\t\t},",
									"\t\titems: {",
									"\t\t\tA1: {",
									"\t\t\t\t\"barcode\": \"978-9876543210\",",
									"\t\t\t\t\"status\": {",
									"\t\t\t\t\t\"name\": \"Available\"",
									"\t\t\t\t}",
									"\t\t\t},",
									"\t\t\tA2: {",
									"\t\t\t\t\"barcode\": \"978-0123456789\",",
									"\t\t\t\t\"status\": {",
									"\t\t\t\t\t\"name\": \"Available\"",
									"\t\t\t\t}",
									"\t\t\t}",
									"\t\t}",
									"\t}",
									"};",
									"",
									"//get instance type",
									"pm.sendRequest({",
									"    url: endpointBooks,",
									"    method: \"GET\",",
									"    header: {",
									"         \"x-okapi-tenant\": tenant,",
									"         \"x-okapi-token\": token",
									"    }},",
									"    function (err, res) {",
									"        if (res.json().instanceTypes.length > 0) {",
									"            testData.case1.instance.instanceTypeId = res.json().instanceTypes[0].id;",
									"            testData.case2.instance.instanceTypeId = res.json().instanceTypes[0].id;",
									"            testData.case3.instance.instanceTypeId = res.json().instanceTypes[0].id;",
									"            testData.case4.instance.instanceTypeId = res.json().instanceTypes[0].id;",
									"            ",
									"            pm.globals.set(\"case1_instance\", JSON.stringify(testData.case1.instance, null, 2));",
									"            pm.globals.set(\"case2_instance\", JSON.stringify(testData.case2.instance, null, 2));",
									"            pm.globals.set(\"case3_instance\", JSON.stringify(testData.case3.instance, null, 2));",
									"            pm.globals.set(\"case4_instance\", JSON.stringify(testData.case4.instance, null, 2));",
									"        }",
									"\t\tpm.globals.set(\"testData\", testData);",
									"",
									"\t\t//get locationId",
									"\t\tpm.sendRequest({",
									"\t\t\turl: endpointLocations,",
									"\t\t\tmethod: \"GET\",",
									"\t\t\theader: {",
									"\t\t\t\t\"x-okapi-tenant\": tenant,",
									"\t\t\t\t\"x-okapi-token\": token",
									"\t\t\t}},",
									"\t\t\tfunction (err, res) {",
									"\t\t\t\tif (res.json().locations.length > 0) {",
									"\t\t\t\t\ttestData.case1.holdings.A.permanentLocationId = res.json().locations[0].id;",
									"\t\t\t\t\ttestData.case2.holdings.A.permanentLocationId = res.json().locations[0].id;",
									"\t\t\t\t\ttestData.case2.holdings.B.permanentLocationId = res.json().locations[0].id;",
									"\t\t\t\t\ttestData.case4.holdings.A.permanentLocationId = res.json().locations[0].id;",
									"\t\t\t\t\t",
									"\t\t\t\t\tpm.globals.set(\"location\", res.json().locations[0].name);",
									"\t\t\t\t\tpm.globals.set(\"case1_holdingA\", JSON.stringify(testData.case1.holdings.A, null, 2));",
									"\t\t\t\t\tpm.globals.set(\"case2_holdingA\", JSON.stringify(testData.case2.holdings.A, null, 2));",
									"\t\t\t\t\tpm.globals.set(\"case2_holdingB\", JSON.stringify(testData.case2.holdings.B, null, 2));",
									"\t\t\t\t\tpm.globals.set(\"case4_holdingA\", JSON.stringify(testData.case4.holdings.A, null, 2));",
									"\t\t\t\t}",
									"\t\t\t\tpm.globals.set(\"testData\", testData);",
									"\t",
									"\t\t\t\t//get material type",
									"\t\t\t\tpm.sendRequest({",
									"\t\t\t\t\turl: endpointBook,",
									"\t\t\t\t\tmethod: \"GET\",",
									"\t\t\t\t\theader: {",
									"\t\t\t\t\t\t \"x-okapi-tenant\": tenant,",
									"\t\t\t\t\t\t \"x-okapi-token\": token",
									"\t\t\t\t\t}},",
									"\t\t\t\t\tfunction (err, res) {",
									"\t\t\t\t\t\tif (res.json().mtypes.length > 0) {",
									"\t\t\t\t\t\t\ttestData.case1.items.A1.materialTypeId = res.json().mtypes[0].id;",
									"\t\t\t\t\t\t\ttestData.case2.items.A1.materialTypeId = res.json().mtypes[0].id;",
									"\t\t\t\t\t\t\ttestData.case2.items.B1.materialTypeId = res.json().mtypes[0].id;",
									"\t\t\t\t\t\t\ttestData.case4.items.A1.materialTypeId = res.json().mtypes[0].id;",
									"\t\t\t\t\t\t\ttestData.case4.items.A2.materialTypeId = res.json().mtypes[0].id;",
									"\t\t\t\t\t\t}",
									"\t\t\t\t\t\tpm.globals.set(\"testData\", testData);",
									"\t\t\t\t\t\t",
									"\t\t\t\t\t\t//get patron group",
									"        \t\t\t\tpm.sendRequest({",
									"        \t\t\t\t\turl: endpointGroups,",
									"        \t\t\t\t\tmethod: \"GET\",",
									"        \t\t\t\t\theader: {",
									"        \t\t\t\t\t\t \"x-okapi-tenant\": tenant,",
									"        \t\t\t\t\t\t \"x-okapi-token\": token",
									"        \t\t\t\t\t}},",
									"        \t\t\t\t\tfunction (err, res) {",
									"        \t\t\t\t\t\tif (res.json().usergroups.length > 0) {",
									"        \t\t\t\t\t\t\ttestData.user.patronGroup = res.json().usergroups[0].id;",
									"        \t\t\t\t\t\t}",
									"        \t\t\t\t\t\tpm.globals.set(\"testData\", testData);",
									"        \t\t\t\t\t\t",
									"        \t\t\t\t\t\t//get loan type",
									"        \t\t\t\t\t\tpm.sendRequest({",
									"        \t\t\t\t\t\t\turl: endpointCanCirculate,",
									"        \t\t\t\t\t\t\tmethod: \"GET\",",
									"        \t\t\t\t\t\t\theader: {",
									"        \t\t\t\t\t\t\t\t\"x-okapi-tenant\": tenant,",
									"        \t\t\t\t\t\t\t\t\"x-okapi-token\": token",
									"        \t\t\t\t\t\t\t}},",
									"        \t\t\t\t\t\t\tfunction (err, res) {",
									"        \t\t\t\t\t\t\t\tif (res.json().loantypes.length > 0) {",
									"        \t\t\t\t\t\t\t\t\ttestData.case1.items.A1.permanentLoanTypeId = res.json().loantypes[0].id;",
									"        \t\t\t\t\t\t\t\t\ttestData.case2.items.A1.permanentLoanTypeId = res.json().loantypes[0].id;",
									"        \t\t\t\t\t\t\t\t\ttestData.case2.items.B1.permanentLoanTypeId = res.json().loantypes[0].id;",
									"        \t\t\t\t\t\t\t\t\ttestData.case4.items.A1.permanentLoanTypeId = res.json().loantypes[0].id;",
									"        \t\t\t\t\t\t\t\t\ttestData.case4.items.A2.permanentLoanTypeId = res.json().loantypes[0].id;",
									"        \t\t\t\t\t\t\t\t}",
									"        \t\t\t\t\t\t\t\tpm.globals.set(\"testData\", testData);",
									"        ",
									"                                        pm.globals.set(\"user\", JSON.stringify(testData.user, null, 2));",
									"        \t\t\t\t\t\t\t\tpm.globals.set(\"case1_itemA1\", JSON.stringify(testData.case1.items.A1, null, 2));",
									"        \t\t\t\t\t\t\t\tpm.globals.set(\"case2_itemA1\", JSON.stringify(testData.case2.items.A1, null, 2));",
									"        \t\t\t\t\t\t\t\tpm.globals.set(\"case2_itemB1\", JSON.stringify(testData.case2.items.B1, null, 2));",
									"        \t\t\t\t\t\t\t\tpm.globals.set(\"case4_itemA1\", JSON.stringify(testData.case4.items.A1, null, 2));",
									"        \t\t\t\t\t\t\t\tpm.globals.set(\"case4_itemA2\", JSON.stringify(testData.case4.items.Anull, 2, 2));",
									"        \t\t\t\t\t\t\t}",
									"        \t\t\t\t\t\t);",
									"        \t\t\t\t\t}",
									"    \t\t\t\t\t);",
									"\t\t\t\t\t}",
									"\t\t\t\t);",
									"\t\t\t}",
									"\t\t);",
									"    }",
									");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d75a59b9-367d-4055-86c6-0b6c1cf9b86c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"{{username}}\",\"password\":\"{{password}}\"}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/authn/login",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"authn",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Positive Tests",
			"item": []
		},
		{
			"name": "Negative Tests",
			"item": []
		},
		{
			"name": "Cleanup",
			"item": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "29271af0-d608-4fd0-a6d0-7f47697b19ba",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "65f7e387-a850-4a74-a499-63606dd653fa",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}