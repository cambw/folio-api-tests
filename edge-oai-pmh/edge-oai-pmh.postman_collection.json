{
	"info": {
		"_postman_id": "6c43053a-f9ba-475c-ac75-2f55c5d0e359",
		"name": "edge-oai-pmh",
		"description": "edge-oai-pmh api tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create User",
			"item": [
				{
					"name": "/authn/login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5dc7ee46-5a45-42bf-b3a6-07a2af0fc9e7",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ed6905bd-6cbb-400f-bc4f-2d222494f953",
								"exec": [
									"let EXPECTED_STATUS=201;",
									"",
									"if(pm.response.to.have.status(EXPECTED_STATUS)) {",
									"    let token = postman.getResponseHeader(\"x-okapi-token\");",
									"    pm.globals.set(\"xokapitoken\", token);",
									"    console.log(\"Current X-Okapi-Token : \" + token);",
									"}",
									"",
									"",
									"pm.test(\"Successfully logged in (201)\", function () {",
									"    pm.response.to.have.status(EXPECTED_STATUS);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"type": "text",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"{{username}}\",\"password\":\"{{password}}\"}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/authn/login",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"authn",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4bae1c04-6f38-4b77-bdea-a918b637e5bd",
								"exec": [
									"pm.test(\"User created - Expected Created (201)\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "39c6d609-c5de-49cf-aa6c-7cc022346e87",
								"exec": [
									"pm.globals.set(\"user\", JSON.stringify(pm.globals.get(\"testData\").user, null, 2));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"type": "text",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{user}}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/users",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "/authn/credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bade5849-49cb-4004-b5bd-42a49b4d45a6",
								"exec": [
									"let EXPECTED_STATUS = 201;",
									"",
									"if(pm.response.to.have.status(EXPECTED_STATUS)) {",
									"    let credentialsId = pm.response.json().id;",
									"    pm.globals.set(\"credentialsId\", credentialsId);",
									"    console.log(\"credentialsId: \" + credentialsId);",
									"}",
									"",
									"pm.test(\"Credentials created - Expected Created (201)\", function () {",
									"    pm.response.to.have.status(EXPECTED_STATUS);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "8465c7b4-1294-4c0e-8a71-729440339f84",
								"exec": [
									"pm.globals.set(\"credentials\", JSON.stringify(pm.globals.get(\"testData\").credentials, null, 2));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"type": "text",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"type": "text",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{credentials}}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/authn/credentials",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"authn",
								"credentials"
							]
						}
					},
					"response": []
				},
				{
					"name": "/perms/users",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f1202b1-b74a-46cc-8fcd-e5d9b76d53b7",
								"exec": [
									"let EXPECTED_STATUS = 201;",
									"",
									"if(pm.response.to.have.status(EXPECTED_STATUS)) {",
									"    let permissionsId = pm.response.json().id;",
									"    pm.globals.set(\"permissionsId\", permissionsId);",
									"    console.log(\"permissionsId: \" + permissionsId);",
									"}",
									"",
									"pm.test(\"Permissions created - Expected Created (201)\", function () {",
									"    pm.response.to.have.status(EXPECTED_STATUS);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dded3598-c238-487d-b06c-721c60509cf4",
								"exec": [
									"pm.globals.set(\"permissions\", JSON.stringify(pm.globals.get(\"testData\").permissions, null, 2));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}",
								"type": "text"
							},
							{
								"key": "x-okapi-token",
								"value": "{{xokapitoken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{permissions}}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/perms/users",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"perms",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Setup",
			"item": [
				{
					"name": "/authn/login",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2793ed6b-8140-4170-bf25-15f58fa36c99",
								"exec": [
									"pm.test(\"Successfully logged in (201)\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"let tenant = pm.environment.get(\"xokapitenant\");",
									"let token = postman.getResponseHeader(\"x-okapi-token\");",
									"pm.globals.set(\"xokapitoken\", token);",
									"",
									"console.log(\"X-Okapi-Token : \" + token);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2290ea20-79a4-49cd-a707-ea109ae7bcc0",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"type": "text",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"username\":\"{{username}}\",\"password\":\"{{password}}\"}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/authn/login",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"authn",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "/instance-storage/instances",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "976c44b6-9efa-4f76-8818-aa488c6ceb15",
								"exec": [
									"pm.test(\"Instance created - Expected Created (201)\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"let identifier = pm.globals.get(\"gl.instance.id\");",
									"let baseURI = pm.environment.get(\"protocol\") + \"://\" + pm.environment.get(\"url\")+ \":\" + pm.environment.get(\"okapiport\");",
									"let endpoint = baseURI + \"/instance-storage/instances/\" + identifier;",
									"",
									"// Verify that instance was saved in storage",
									"const getInstanceRequest = {",
									"  url: endpoint,",
									"  method: \"GET\",",
									"  header: [\"X-Okapi-Tenant:\" + pm.globals.get(\"gl.tenant.name\"), ",
									"  \"X-Okapi-Token:\" + pm.globals.get(\"xokapitoken\")],",
									"};",
									"",
									"pm.test(\"Testing instance retrieved (200)\", function () {",
									"    pm.sendRequest(getInstanceRequest, function (err, response) {",
									"    console.log(response);",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cacc131d-5556-41ea-aaf8-92e6907f7a80",
								"exec": [
									"let instance1 = pm.globals.get(\"testData\").instance1;",
									"pm.globals.set(\"instance1\", JSON.stringify(instance1, null, 2));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"type": "text",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"type": "text",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{instance1}}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/instance-storage/instances",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"instance-storage",
								"instances"
							]
						}
					},
					"response": []
				},
				{
					"name": "/source-record/marc-json",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "976c44b6-9efa-4f76-8818-aa488c6ceb15",
								"exec": [
									"pm.test(\"Expected Created (204)\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cacc131d-5556-41ea-aaf8-92e6907f7a80",
								"exec": [
									"pm.globals.set(\"instanceId\", pm.globals.get(\"testData\").instance1.id);",
									"pm.globals.set(\"marcjson1\", JSON.stringify(pm.globals.get(\"testData\").marcjson1, null, 2));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"type": "text",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"type": "text",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{marcjson1}}"
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/instance-storage/instances/{{instanceId}}/source-record/marc-json",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"instance-storage",
								"instances",
								"{{instanceId}}",
								"source-record",
								"marc-json"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "MetadataFormats",
			"item": [
				{
					"name": "/oai/ - ListMetadataFormats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "930715a0-e0fd-4545-9cd3-9740f467a953",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "32277bc7-451d-4d58-828b-944c885e1698",
								"exec": [
									"pm.test(\"ListMetadataFormats successfully completed (200)\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-tenant",
								"value": "{{xokapitenant}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{edge.protocol}}://{{edge.host}}:{{edge.port}}/oai?verb=ListMetadataFormats&apikey={{edge.apikey}}",
							"protocol": "{{edge.protocol}}",
							"host": [
								"{{edge.host}}"
							],
							"port": "{{edge.port}}",
							"path": [
								"oai"
							],
							"query": [
								{
									"key": "verb",
									"value": "ListMetadataFormats"
								},
								{
									"key": "apikey",
									"value": "{{edge.apikey}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/oai/ - Existing_Identifier",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "62f17e5f-76a3-4e79-83a9-e28dcbce0292",
								"exec": [
									"pm.test(\"ListMetadataFormats successfully completed (200)\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "41e05ac3-988a-4e22-b15f-a1693e9205a3",
								"exec": [
									"let testData = pm.globals.get(\"testData\");",
									"pm.globals.set(\"identifier\", testData.instance1.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-tenant",
								"type": "text",
								"value": "{{xokapitenant}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{edge.protocol}}://{{edge.host}}:{{edge.port}}/oai?verb=ListMetadataFormats&apikey={{edge.apikey}}&identifier=oai:tbd.later.folio.org:diku/{{identifier}}",
							"protocol": "{{edge.protocol}}",
							"host": [
								"{{edge.host}}"
							],
							"port": "{{edge.port}}",
							"path": [
								"oai"
							],
							"query": [
								{
									"key": "verb",
									"value": "ListMetadataFormats"
								},
								{
									"key": "apikey",
									"value": "{{edge.apikey}}"
								},
								{
									"key": "identifier",
									"value": "oai:tbd.later.folio.org:diku/{{identifier}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/oai/ - Invalid_Identifier",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf13b3e1-a311-4deb-a43e-0d6d4303ae61",
								"exec": [
									"pm.test(\"Expected Unprocessable Entity (422)\", function () {",
									"    pm.response.to.have.status(422);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Okapi-Tenant",
								"type": "text",
								"value": "{{xokapitenant}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{edge.protocol}}://{{edge.host}}:{{edge.port}}/oai?verb=ListMetadataFormats&apikey={{edge.apikey}}&identifier=invalid-identifier",
							"protocol": "{{edge.protocol}}",
							"host": [
								"{{edge.host}}"
							],
							"port": "{{edge.port}}",
							"path": [
								"oai"
							],
							"query": [
								{
									"key": "verb",
									"value": "ListMetadataFormats"
								},
								{
									"key": "apikey",
									"value": "{{edge.apikey}}"
								},
								{
									"key": "identifier",
									"value": "invalid-identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/oai/ - Not_Existing_Identifier",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cf13b3e1-a311-4deb-a43e-0d6d4303ae61",
								"exec": [
									"pm.test(\"Expected Not Found (404)\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-okapi-tenant",
								"type": "text",
								"value": "{{xokapitenant}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{edge.protocol}}://{{edge.host}}:{{edge.port}}/oai?verb=ListMetadataFormats&apikey={{edge.apikey}}&identifier=oai:tbd.later.folio.org:diku/{{identifier}}A",
							"protocol": "{{edge.protocol}}",
							"host": [
								"{{edge.host}}"
							],
							"port": "{{edge.port}}",
							"path": [
								"oai"
							],
							"query": [
								{
									"key": "verb",
									"value": "ListMetadataFormats"
								},
								{
									"key": "apikey",
									"value": "{{edge.apikey}}"
								},
								{
									"key": "identifier",
									"value": "oai:tbd.later.folio.org:diku/{{identifier}}A"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "beab1fcc-f6a9-4310-b904-1c14ce99b95c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "527b9579-4fda-40a6-862a-1d7dfc19899c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Test Cleanup",
			"item": [
				{
					"name": "/users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8f499eb4-6dcf-4d3c-a5bc-fa649b5312d4",
								"exec": [
									"let userId = pm.globals.get(\"testData\").user.id;",
									"pm.globals.set(\"userId\", userId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "246f2ca6-d980-4ae7-907c-2038bc99dd34",
								"exec": [
									"pm.test(\"User deleted - Expected No Content (204)\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"type": "text",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"type": "text",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/users/{{userId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/authn/credentials",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d4e68cd5-eca2-4427-ba8b-6f059a5fc130",
								"exec": [
									"pm.globals.set(\"credentials\", JSON.stringify(pm.globals.get(\"testData\").credentials, null, 2));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1ff89363-4db6-40bc-a848-e7532b2a7bc0",
								"exec": [
									"pm.test(\"Credentials deleted - Expected No Content (204)\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"type": "text",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"type": "text",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/authn/credentials/{{credentialsId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"authn",
								"credentials",
								"{{credentialsId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/perms/users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "234a882a-edd7-4bac-8bc2-7f89c8a7a713",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f74eb5c8-1652-480c-9fac-356b3a3ffc56",
								"exec": [
									"pm.test(\"Permissions deleted - Expected No Content (204)\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"type": "text",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"type": "text",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/perms/users/{{permissionsId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"perms",
								"users",
								"{{permissionsId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "/source-record/marc-json",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "976c44b6-9efa-4f76-8818-aa488c6ceb15",
								"exec": [
									"pm.test(\"Expected Created (204)\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "cacc131d-5556-41ea-aaf8-92e6907f7a80",
								"exec": [
									"let testData = pm.globals.get(\"testData\");",
									"pm.globals.set(\"instanceId\", testData.instance1.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"type": "text",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"type": "text",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/instance-storage/instances/{{instanceId}}/source-record/marc-json",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"instance-storage",
								"instances",
								"{{instanceId}}",
								"source-record",
								"marc-json"
							]
						}
					},
					"response": []
				},
				{
					"name": "/instance-storage/instances",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2cc46022-e60f-4734-b0b5-a23ca495b282",
								"exec": [
									"pm.test(\"Testing instance created (204)\", function () {",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.globals.clear();"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "318b5739-ba76-418e-ac31-f052eb894f79",
								"exec": [
									"pm.globals.set(\"instanceId\", pm.globals.get(\"testData\").instance1.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "content-type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "x-okapi-tenant",
								"type": "text",
								"value": "{{xokapitenant}}"
							},
							{
								"key": "x-okapi-token",
								"type": "text",
								"value": "{{xokapitoken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url}}:{{okapiport}}/instance-storage/instances/{{instanceId}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url}}"
							],
							"port": "{{okapiport}}",
							"path": [
								"instance-storage",
								"instances",
								"{{instanceId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "aab0639c-5e64-4ad1-b296-ad829c519ebd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "16fa792e-fd75-4612-979a-07974ef36cf9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "4a4babf7-24f5-4f69-be22-8d7bc543a965",
				"type": "text/javascript",
				"exec": [
					"let testData = {",
					"    // Hardcoded id",
					"    user: {",
					"        \"id\": \"dd0e3f0b-1f55-4ccc-9ec5-a7e5054cb758\",",
					"        \"username\": \"user\",",
					"        \"active\": true,",
					"        \"proxyFor\": [],",
					"        \"personal\": {",
					"            \"lastName\": \"LastName\",",
					"            \"firstName\": \"FirstName\",",
					"            \"addresses\": []",
					"        }",
					"    },",
					"    credentials: {",
					"\t    \"username\": \"user\",",
					"\t    \"password\": \"password\"",
					"    },",
					"    permissions: {",
					"\t    \"userId\": \"dd0e3f0b-1f55-4ccc-9ec5-a7e5054cb758\",",
					"\t    \"permissions\": [\"oai-pmh.all\"]",
					"    },",
					"    instance1: {",
					"    \"id\": \"62ca5b43-0f11-40af-a6b4-1a9ee2db33cb\",",
					"    \"hrid\": \"in000019\",",
					"    \"source\": \"MARC\",",
					"    \"title\": \"The Neurotic Heroine in Tennessee Williams microform C.N. Stavrou\",",
					"    \"alternativeTitles\": [],",
					"    \"editions\": [],",
					"    \"series\": [],",
					"    \"identifiers\": [",
					"        {",
					"            \"value\": \"53957015X\",",
					"            \"identifierTypeId\": \"5d164f4b-0b15-4e42-ae75-cfcf85318ad9\"",
					"        },",
					"        {",
					"            \"value\": \"(DE-599)GBV53957015X\",",
					"            \"identifierTypeId\": \"7e591197-f335-4afb-bc6d-a6d76ca3bace\"",
					"        }",
					"    ],",
					"    \"contributors\": [",
					"        {",
					"            \"name\": \"Stavrou, C.N\",",
					"            \"contributorNameTypeId\": \"2b94c631-fca9-4892-a730-03ee529ffe2a\"",
					"        }",
					"    ],",
					"    \"subjects\": [],",
					"    \"classifications\": [],",
					"    \"publication\": [",
					"        {",
					"            \"publisher\": \"Columbia University\",",
					"            \"place\": \"New York\",",
					"            \"dateOfPublication\": \"1955\"",
					"        }",
					"    ],",
					"    \"publicationFrequency\": [],",
					"    \"publicationRange\": [],",
					"    \"electronicAccess\": [],",
					"    \"instanceTypeId\": \"6312d172-f0cf-40f6-b27d-9fa8feaf332f\",",
					"    \"instanceFormatIds\": [],",
					"    \"physicalDescriptions\": [",
					"        \"1 Mikrofilm 26-34 S.\"",
					"    ],",
					"    \"languages\": [",
					"        \"eng\"",
					"    ],",
					"    \"notes\": [",
					"        \"Mikrofilm-Ausg. 1957 1 Mikrofilm\"",
					"    ],",
					"    \"statisticalCodes\": [],",
					"    \"sourceRecordFormat\": \"MARC-JSON\",",
					"    \"metadata\": {",
					"        \"createdDate\": \"2018-10-29T02:48:02.473+0000\",",
					"        \"createdByUserId\": \"cda822d8-09c9-5676-a743-d6311e148146\",",
					"        \"updatedDate\": \"2018-10-29T02:48:02.473+0000\",",
					"        \"updatedByUserId\": \"cda822d8-09c9-5676-a743-d6311e148146\"",
					"    },",
					"    \"holdingsRecords2\": []",
					"    },",
					"    marcjson1: {",
					"    \"leader\": \"01860nam a2200337 ca4500\",",
					"    \"fields\": [",
					"        {",
					"            \"001\": \"1010770160\"",
					"        },",
					"        {",
					"            \"003\": \"DE-601\"",
					"        },",
					"        {",
					"            \"005\": \"20180214103458.0\"",
					"        },",
					"        {",
					"            \"008\": \"180111s2018\\\\\\\\\\\\\\\\xxu\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\000\\\\0\\\\eng\\\\d\"",
					"        },",
					"        {",
					"            \"020\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"9781473937703\"",
					"                    },",
					"                    {",
					"                        \"c\": \"set\"",
					"                    },",
					"                    {",
					"                        \"9\": \"978-1-4739-3770-3\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"035\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"(DE-599)GBV1010770160\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"040\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"b\": \"ger\"",
					"                    },",
					"                    {",
					"                        \"c\": \"GBVCP\"",
					"                    },",
					"                    {",
					"                        \"e\": \"rda\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"041\": {",
					"                \"ind1\": \"0\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"eng\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"044\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"xxu\"",
					"                    },",
					"                    {",
					"                        \"a\": \"xxk\"",
					"                    },",
					"                    {",
					"                        \"a\": \"ii\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"050\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"0\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"H\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"082\": {",
					"                \"ind1\": \"0\",",
					"                \"ind2\": \"0\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"300\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"084\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"74.72\"",
					"                    },",
					"                    {",
					"                        \"9\": \"Stadtplanung\"",
					"                    },",
					"                    {",
					"                        \"9\": \"kommunale Planung\"",
					"                    },",
					"                    {",
					"                        \"2\": \"bkl\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"084\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"74.12\"",
					"                    },",
					"                    {",
					"                        \"9\": \"Stadtgeographie\"",
					"                    },",
					"                    {",
					"                        \"9\": \"Siedlungsgeographie\"",
					"                    },",
					"                    {",
					"                        \"2\": \"bkl\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"245\": {",
					"                \"ind1\": \"0\",",
					"                \"ind2\": \"4\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"The city\"",
					"                    },",
					"                    {",
					"                        \"b\": \"post-modernity\"",
					"                    },",
					"                    {",
					"                        \"c\": \"edited by Alan Latham\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"264\": {",
					"                \"ind1\": \"3\",",
					"                \"ind2\": \"1\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"Los Angeles\"",
					"                    },",
					"                    {",
					"                        \"a\": \"London\"",
					"                    },",
					"                    {",
					"                        \"a\": \"New Delhi\"",
					"                    },",
					"                    {",
					"                        \"a\": \"Singapore\"",
					"                    },",
					"                    {",
					"                        \"a\": \"Washington DC\"",
					"                    },",
					"                    {",
					"                        \"a\": \"Melbourne\"",
					"                    },",
					"                    {",
					"                        \"b\": \"SAGE\"",
					"                    },",
					"                    {",
					"                        \"c\": \"2018\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"336\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"Text\"",
					"                    },",
					"                    {",
					"                        \"b\": \"txt\"",
					"                    },",
					"                    {",
					"                        \"2\": \"rdacontent\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"337\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"ohne Hilfsmittel zu benutzen\"",
					"                    },",
					"                    {",
					"                        \"b\": \"n\"",
					"                    },",
					"                    {",
					"                        \"2\": \"rdamedia\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"338\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"Band\"",
					"                    },",
					"                    {",
					"                        \"b\": \"nc\"",
					"                    },",
					"                    {",
					"                        \"2\": \"rdacarrier\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"490\": {",
					"                \"ind1\": \"0\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"SAGE benchmarks in culture and society\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"520\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"Cities are sites of great wealth and poverty, of hope and despair, of social and economic dynamism, as well as tradition and established power. Social scientists and humanities scholars have over the past three decades generated an impressive range of perspectives for making sense of the vast complexities of cities. These perspectives tell both of the economic, social and political dynamism cities generate, and point to possible lines of future development. The four volumes, The City: Post-Modernity, will focus more exclusively on the contemporary city, looking at the subject through the lenses of globalization and post-colonialism, amongst others\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"650\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"7\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"0\": \"(DE-601)106153919\"",
					"                    },",
					"                    {",
					"                        \"0\": \"(DE-588)4056723-0\"",
					"                    },",
					"                    {",
					"                        \"a\": \"Stadt\"",
					"                    },",
					"                    {",
					"                        \"2\": \"gnd\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"650\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"7\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"0\": \"(DE-601)104288515\"",
					"                    },",
					"                    {",
					"                        \"0\": \"(DE-588)4115604-3\"",
					"                    },",
					"                    {",
					"                        \"a\": \"Postmoderne\"",
					"                    },",
					"                    {",
					"                        \"2\": \"gnd\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"655\": {",
					"                \"ind1\": \"0\",",
					"                \"ind2\": \"7\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"0\": \"(DE-588)4143413-4\"",
					"                    },",
					"                    {",
					"                        \"a\": \"Aufsatzsammlung\"",
					"                    },",
					"                    {",
					"                        \"2\": \"gnd-content\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"700\": {",
					"                \"ind1\": \"1\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"Latham, Alan\"",
					"                    },",
					"                    {",
					"                        \"e\": \"HerausgeberIn\"",
					"                    },",
					"                    {",
					"                        \"4\": \"edt\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"900\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"a\": \"GBV\"",
					"                    },",
					"                    {",
					"                        \"b\": \"SUB+Uni Hamburg <18>\"",
					"                    }",
					"                ]",
					"            }",
					"        },",
					"        {",
					"            \"954\": {",
					"                \"ind1\": \"\\\\\",",
					"                \"ind2\": \"\\\\\",",
					"                \"subfields\": [",
					"                    {",
					"                        \"0\": \"SUB+Uni Hamburg <18>\"",
					"                    },",
					"                    {",
					"                        \"a\": \"22\"",
					"                    },",
					"                    {",
					"                        \"b\": \"1740834291\"",
					"                    },",
					"                    {",
					"                        \"c\": \"01\"",
					"                    },",
					"                    {",
					"                        \"x\": \"0018\"",
					"                    }",
					"                ]",
					"            }",
					"        }",
					"    ]",
					"}",
					"};",
					"",
					"// Global testing object - used in further tests",
					"pm.globals.set(\"testData\", testData);",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "4d4ea915-b9aa-4698-9b8f-a6ced1ae131e",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}